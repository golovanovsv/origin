# Устанавливаем необходимый софт
# ansible_pkg_mgr:
#    pkgng - FreeBSD
#    apt - Linux apt

- name: "Install software | apt"
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: present
  loop:
    - "{{ shared_software }}"
    - "{{ linux_software }}"
    - "{{ additional_software }}"
  when: ansible_pkg_mgr == "apt"

- name: "Install software| yum"
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ shared_software }}"
    - "{{ linux_software }}"
    - "{{ additional_software }}"
  when: ansible_pkg_mgr == "yum"

- block:
    - name: "Install software | force update pkgng"
      shell: "pkgng update -fq"
      when: freebsd_pkgng_forceupdate
      changed_when: false

    - name: "Install software | pkgng"
      pkgng:
        cached: no
        name: "{{ item }}"
      loop:
        - "{{ shared_software }}"
        - "{{ freebsd_software }}"
        - "{{ additional_software }}"
  when: ansible_pkg_mgr == "pkgng"

# Устанавливаем/обновляем PIP
# PIP устанавливается при наличии на сервере python2/python3
- set_fact:
    pip_enabled: true
    pip2_absent: true
    pip3_absent: true
    python2: false
    python3: false

- block:
  - name: "Finding PIP2"
    stat:
      path: "{{ item }}"
    loop:
      - "/usr/local/bin/pip2"
      - "/usr/bin/pip2"
      - "/bin/pip2"
    register: pip2_stat

  - name: "Check PIP2 installed"
    set_fact:
      pip2_absent: false
    loop: "{{ pip2_stat.results }}"
    when: item.stat.exists

  - name: "Finding PIP3"
    stat:
      path: "{{ item }}"
    loop:
      - "/usr/local/bin/pip3"
      - "/usr/bin/pip3"
      - "/bin/pip3"
    register: pip3_stat

  - name: "Check PIP3 installed"
    set_fact:
      pip3_absent: false
    loop: "{{ pip3_stat.results }}"
    when: item.stat.exists

  - name: "Finding python2"
    stat:
      path: "{{ item }}"
    loop:
      - "/usr/bin/python2"
      - "/usr/local/bin/python2"
      - "/usr/bin/python2.7"
      - "/usr/local/bin/python2.7"
    register: python2_stat

  - name: "Select python2"
    set_fact:
      python2_bin: "{{ item.item }}"
      python2: true
    loop: "{{ python2_stat.results }}"
    when: item.stat.exists

  - name: "Finding python3"
    stat:
      path: "{{ item }}"
    loop:
      - "/usr/bin/python3"
      - "/usr/local/bin/python3"
      - "/usr/bin/python3.5"
      - "/usr/local/bin/python3.5"
    register: python3_stat

  - name: "Select python3"
    set_fact:
      python3_bin: "{{ item.item }}"
      python3: true
    loop: "{{ python3_stat.results }}"
    when: item.stat.exists

  - name: "Install PIP"
    block:
      - name: "Download PIP installer"
        get_url:
          url: "https://bootstrap.pypa.io/get-pip.py"
          dest: /tmp/get-pip.py
        changed_when: false

      - name: "Install PIP2"
        command: "{{ python2_bin }} /tmp/get-pip.py"
        when: pip2_absent and python2

      - name: "Install PIP3"
        command: "{{ python3_bin }} /tmp/get-pip.py"
        when: pip3_absent and python3

      - name: "Clean up"
        file:
          path: "/tmp/get-pip.py"
          state: absent
        changed_when: false
    when: pip2_absent or pip3_absent
  when: pip_enabled

- name: "Install additional python software"
  pip:
    name: "{{ item }}"
  loop:
    - "setuptools"
    - "{{ additional_python_software }}"